import { Validators } from '@angular/forms';
import { iformField } from './iformField';

export const ItemsTableFormFields: iformField[] = [
  {
    tableName: 'items',
    tableColumnName: 'itemId',
    tableColumnType: 'int',
    tableColumnDescription: 'Item Id',
    formElenentOrder: 1,
    formElementIsActive: false,
    formElementControlName: 'itemId',
    formElementControlType: 'input',
    formElementIsEditable: false,
    formElementInputType: 'number',
    formElementLabel: 'Item Id',
    formElementPlaceHolder: 'Enter Item Id',
    formElementValidators: [],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemName',
    tableColumnType: 'varchar',
    tableColumnDescription: 'Item Name',
    formElenentOrder: 2,
    formElementIsActive: false,
    formElementControlName: 'itemName',
    formElementControlType: 'input',
    formElementIsEditable: true,
    formElementInputType: 'text',
    formElementLabel: 'Item Name',
    formElementPlaceHolder: 'Enter Item Name',
    formElementValidators: [
      {
        validatorName: 'required',
        validator: Validators.required,
        validatorErrorMessage: 'The Item Name field is required.',
      },
      {
        validatorName: 'minlength',             // *** Please pay attention that it is minlength and not minLengh (no L but l) ***
        validator: Validators.minLength(2),
        validatorErrorMessage:
          'The Item Name field  must be at least 2 characters long.',
      },
    ],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemDescription',
    tableColumnType: 'varchar',
    tableColumnDescription: 'Item Description',
    formElenentOrder: 3,
    formElementIsActive: false,
    formElementControlName: 'itemDescription',
    formElementControlType: 'input',
    formElementIsEditable: true,
    formElementInputType: 'text',
    formElementLabel: 'Item Description',
    formElementPlaceHolder: 'Enter Item Description',
    formElementValidators: [
      {
        validatorName: 'required',
        validator: Validators.required,
        validatorErrorMessage: 'The Item Description field is required.',
      },
      {
        validatorName: 'minlength',        // *** Please pay attention that it is minlength and not minLengh (no L but l) ***
        validator: Validators.minLength(5),
        validatorErrorMessage:
          'The Item Name field  must be at least 5 characters long.',
      },
    ],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemModelYear',
    tableColumnType: 'int',
    tableColumnDescription: 'Item Model Year',
    formElenentOrder: 4,
    formElementIsActive: false,
    formElementControlName: 'itemModelYear',
    formElementControlType: 'input',
    formElementIsEditable: true,
    formElementInputType: 'number',
    formElementLabel: 'Item Model Year',
    formElementPlaceHolder: 'Enter Item Model Year',
    formElementMinValue: 1998,
    formElementMaxValue: 2024,
    formElementStepValue: 1,
    formElementValidators: [
      {
        validatorName: 'required',
        validator: Validators.required,
        validatorErrorMessage: 'A valid Year must be provided.',
      },
      {
        validatorName: 'max',
        validator: Validators.max(2024),
        validatorErrorMessage: 'The Year must not be greater than 2024.',
      },
      {
        validatorName: 'min',
        validator: Validators.min(1998),
        validatorErrorMessage: 'The Year must not be less than 1998.',
      },
    ],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemStatusId',
    tableColumnType: 'int',
    tableColumnDescription: 'Item Status Id',
    formElenentOrder: 5,
    formElementIsActive: false,
    formElementControlName: 'itemStatusId',
    formElementControlType: 'input',
    formElementIsEditable: true,
    formElementInputType: 'number',
    formElementLabel: 'Item Status Id',
    formElementPlaceHolder: 'Enter Item Status Id',
    formElementValidators: [],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemCrUUID',
    tableColumnType: 'varchar',
    tableColumnDescription: 'Item Cr UUID',
    formElenentOrder: 6,
    formElementIsActive: false,
    formElementControlName: 'itemCrUUID',
    formElementControlType: 'input',
    formElementIsEditable: false,
    formElementInputType: 'text',
    formElementLabel: 'Item Cr UUID',
    formElementPlaceHolder: 'Enter Item Cr UUID',
    formElementValidators: [],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemCrTimestamp',
    tableColumnType: 'timestamp',
    tableColumnDescription: 'Item Cr Timestamp',
    formElenentOrder: 7,
    formElementIsActive: false,
    formElementControlName: 'itemCrTimestamp',
    formElementControlType: 'input',
    formElementIsEditable: false,
    formElementInputType: 'datetime-local',
    formElementLabel: 'Item Cr Timestamp',
    formElementPlaceHolder: 'Enter Item Cr Timestamp',
    formElementValidators: [],
    formElementValues: [],
  },
  {
    tableName: 'items',
    tableColumnName: 'itemClientUUID',
    tableColumnType: 'varchar',
    tableColumnDescription: 'Item Client UUID',
    formElenentOrder: 8,
    formElementIsActive: false,
    formElementControlName: 'itemClientUUID',
    formElementControlType: 'input',
    formElementIsEditable: false,
    formElementInputType: 'text',
    formElementLabel: 'Item Client UUID',
    formElementPlaceHolder: 'Enter Item Client UUID',
    formElementValidators: [],
    formElementValues: [],
  },
];
